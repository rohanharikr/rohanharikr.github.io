<!DOCTYPE html><html lang="en" ><head><meta charset="UTF-8"><meta name="viewport" content="width=device-width, initial-scale=1.0"><meta name="generator" content="Jekyll v4.1.0" /><meta property="og:title" content="Rohan" /><meta name="author" content="rohan" /><meta property="og:locale" content="en_US" /><meta name="description" content="{ “version”: “https://jsonfeed.org/version/1”, “title”: “Rohan”, “home_page_url”: “http://localhost:4000/”, “feed_url”: “http://localhost:4000/feed.json”, “description”: “Rohan was here.”, “icon”: “http://localhost:4000/apple-touch-icon.png”, “favicon”: “http://localhost:4000/favicon.ico”, “expired”: false, &quot;author&quot;: { &quot;name&quot;: &quot;rohan&quot;, &quot;url&quot;: null, &quot;avatar&quot;: null }, “items”: [ { &quot;id&quot;: &quot;http://localhost:4000/2020/06/02/rock-paper-scissors-javascript&quot;, &quot;title&quot;: &quot;Rock, paper, scissors, javascript&quot;, &quot;summary&quot;: null, &quot;content_text&quot;: &quot;Scroll down for full code.Output// Pass a choice as argument to the main function.You chose paper and computer chose rock.You win!Create an array of all possible choicesconst choices = [\&quot;rock\&quot;, \&quot;paper\&quot;, \&quot;scissors\&quot;]Random ChoiceThis would give us a random number between 1 and the array length which in this case happens to be 3.Math.floor(Math.random() * choices.length)Main functionThe Random Choice code is put inside a function because ideally, everytime this function is called, a new choice would be generated.function game(userChoice) { const computerChoice = choices[Math.floor(Math.random() * choices.length)] console.log(`You chose ${userChoice} and computer chose ${computerChoice}.`)...}MatchmakingFirst things first, lets consider all the tie cases.function game(userChoice) { const computerChoice = choices[Math.floor(Math.random() * choices.length)] console.log(`You chose ${userChoice} and computer chose ${computerChoice}.`) \tif (userChoice === computerChoice) { console.log(\&quot;It&#39;s a tie!\&quot;) }...}All the cases when your choice is rockif (userChoice === \&quot;rock\&quot;) {\tif (computerChoice === \&quot;paper\&quot;) { console.log(\&quot;You lost!\&quot;) } else if (computerChoice === \&quot;scissors\&quot;) { console.log(\&quot;You won!\&quot;) }Repeat for other n choices; this case, twoif (userChoice === \&quot;paper\&quot;) { if (computerChoice === \&quot;rock\&quot;) { console.log(\&quot;You won!\&quot;) } else if (computerChoice === \&quot;scissors\&quot;) { console.log(\&quot;You lost!\&quot;) }}if (userChoice === \&quot;scissors\&quot;) { if (computerChoice === \&quot;rock\&quot;) { console.log(\&quot;You lost!\&quot;) } else if (computerChoice === \&quot;paper\&quot;) { console.log(\&quot;You won!\&quot;) }}Optimise by writing all the cases in one blockif (userChoice === computerChoice) { console.log(\&quot;It&#39;s a tie!\&quot;) } else if (userChoice === \&quot;rock\&quot;) { if (computerChoice === \&quot;paper\&quot;) { console.log(\&quot;You lost!\&quot;) } else if (computerChoice === \&quot;scissors\&quot;) { console.log(\&quot;You won!\&quot;) } } else if (userChoice === \&quot;paper\&quot;) { if (computerChoice === \&quot;rock\&quot;) { console.log(\&quot;You won!\&quot;) } else if (computerChoice === \&quot;scissors\&quot;) { console.log(\&quot;You lost!\&quot;) } } else if (userChoice === \&quot;scissors\&quot;) { if (computerChoice === \&quot;rock\&quot;) { console.log(\&quot;You lost!\&quot;) } else if (computerChoice === \&quot;paper\&quot;) { console.log(\&quot;You won!\&quot;) } }Full Code&quot;, &quot;content_html&quot;: &quot;&lt;h4 id=\&quot;scroll-down-for-full-code\&quot;&gt;&lt;a href=\&quot;#full-code\&quot;&gt;Scroll down for full code.&lt;/a&gt;&lt;/h4&gt;&lt;h4 id=\&quot;output\&quot;&gt;Output&lt;/h4&gt;&lt;pre&gt;&lt;code&gt;// Pass a choice as argument to the main function.You chose paper and computer chose rock.You win!&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=\&quot;create-an-array-of-all-possible-choices\&quot;&gt;Create an array of all possible choices&lt;/h4&gt;&lt;p&gt;&lt;code&gt;const choices = [\&quot;rock\&quot;, \&quot;paper\&quot;, \&quot;scissors\&quot;]&lt;/code&gt;&lt;/p&gt;&lt;h4 id=\&quot;random-choice\&quot;&gt;Random Choice&lt;/h4&gt;&lt;p&gt;This would give us a random number between 1 and the array length which in this case happens to be 3.&lt;/p&gt;&lt;p&gt;&lt;code&gt;Math.floor(Math.random() * choices.length)&lt;/code&gt;&lt;/p&gt;&lt;h4 id=\&quot;main-function\&quot;&gt;Main function&lt;/h4&gt;&lt;p&gt;The &lt;code&gt;Random Choice&lt;/code&gt; code is put inside a function because ideally, everytime this function is called, a new choice would be generated.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;function game(userChoice) { const computerChoice = choices[Math.floor(Math.random() * choices.length)] console.log(`You chose ${userChoice} and computer chose ${computerChoice}.`)...}&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=\&quot;matchmaking\&quot;&gt;Matchmaking&lt;/h4&gt;&lt;p&gt;First things first, lets consider all the tie cases.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;function game(userChoice) { const computerChoice = choices[Math.floor(Math.random() * choices.length)] console.log(`You chose ${userChoice} and computer chose ${computerChoice}.`) \tif (userChoice === computerChoice) { console.log(\&quot;It&#39;s a tie!\&quot;) }...}&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=\&quot;all-the-cases-when-your-choice-is-rock\&quot;&gt;All the cases when your choice is rock&lt;/h4&gt;&lt;pre&gt;&lt;code&gt;if (userChoice === \&quot;rock\&quot;) {\tif (computerChoice === \&quot;paper\&quot;) { console.log(\&quot;You lost!\&quot;) } else if (computerChoice === \&quot;scissors\&quot;) { console.log(\&quot;You won!\&quot;) }&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=\&quot;repeat-for-other-n-choices-this-case-two\&quot;&gt;Repeat for other n choices; this case, two&lt;/h4&gt;&lt;pre&gt;&lt;code&gt;if (userChoice === \&quot;paper\&quot;) { if (computerChoice === \&quot;rock\&quot;) { console.log(\&quot;You won!\&quot;) } else if (computerChoice === \&quot;scissors\&quot;) { console.log(\&quot;You lost!\&quot;) }}if (userChoice === \&quot;scissors\&quot;) { if (computerChoice === \&quot;rock\&quot;) { console.log(\&quot;You lost!\&quot;) } else if (computerChoice === \&quot;paper\&quot;) { console.log(\&quot;You won!\&quot;) }}&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=\&quot;optimise-by-writing-all-the-cases-in-one-block\&quot;&gt;Optimise by writing all the cases in one block&lt;/h4&gt;&lt;pre&gt;&lt;code&gt;if (userChoice === computerChoice) { console.log(\&quot;It&#39;s a tie!\&quot;) } else if (userChoice === \&quot;rock\&quot;) { if (computerChoice === \&quot;paper\&quot;) { console.log(\&quot;You lost!\&quot;) } else if (computerChoice === \&quot;scissors\&quot;) { console.log(\&quot;You won!\&quot;) } } else if (userChoice === \&quot;paper\&quot;) { if (computerChoice === \&quot;rock\&quot;) { console.log(\&quot;You won!\&quot;) } else if (computerChoice === \&quot;scissors\&quot;) { console.log(\&quot;You lost!\&quot;) } } else if (userChoice === \&quot;scissors\&quot;) { if (computerChoice === \&quot;rock\&quot;) { console.log(\&quot;You lost!\&quot;) } else if (computerChoice === \&quot;paper\&quot;) { console.log(\&quot;You won!\&quot;) } }&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=\&quot;full-code\&quot;&gt;&lt;a name=\&quot;full-code\&quot;&gt;Full Code&lt;/a&gt;&lt;/h4&gt;&lt;script src=\&quot;https://gist.github.com/rohanharikr/8bfbd1471389e795b436cd87ab09a444.js\&quot;&gt;&lt;/script&gt;&quot;, &quot;url&quot;: &quot;http://localhost:4000/2020/06/02/rock-paper-scissors-javascript&quot;, &quot;date_published&quot;: &quot;2020-06-02T00:00:00+05:30&quot;, &quot;date_modified&quot;: &quot;2020-06-02T00:00:00+05:30&quot;, &quot;author&quot;: { &quot;name&quot;: &quot;rohan&quot;, &quot;url&quot;: null, &quot;avatar&quot;: null } } ] }" /><meta property="og:description" content="{ “version”: “https://jsonfeed.org/version/1”, “title”: “Rohan”, “home_page_url”: “http://localhost:4000/”, “feed_url”: “http://localhost:4000/feed.json”, “description”: “Rohan was here.”, “icon”: “http://localhost:4000/apple-touch-icon.png”, “favicon”: “http://localhost:4000/favicon.ico”, “expired”: false, &quot;author&quot;: { &quot;name&quot;: &quot;rohan&quot;, &quot;url&quot;: null, &quot;avatar&quot;: null }, “items”: [ { &quot;id&quot;: &quot;http://localhost:4000/2020/06/02/rock-paper-scissors-javascript&quot;, &quot;title&quot;: &quot;Rock, paper, scissors, javascript&quot;, &quot;summary&quot;: null, &quot;content_text&quot;: &quot;Scroll down for full code.Output// Pass a choice as argument to the main function.You chose paper and computer chose rock.You win!Create an array of all possible choicesconst choices = [\&quot;rock\&quot;, \&quot;paper\&quot;, \&quot;scissors\&quot;]Random ChoiceThis would give us a random number between 1 and the array length which in this case happens to be 3.Math.floor(Math.random() * choices.length)Main functionThe Random Choice code is put inside a function because ideally, everytime this function is called, a new choice would be generated.function game(userChoice) { const computerChoice = choices[Math.floor(Math.random() * choices.length)] console.log(`You chose ${userChoice} and computer chose ${computerChoice}.`)...}MatchmakingFirst things first, lets consider all the tie cases.function game(userChoice) { const computerChoice = choices[Math.floor(Math.random() * choices.length)] console.log(`You chose ${userChoice} and computer chose ${computerChoice}.`) \tif (userChoice === computerChoice) { console.log(\&quot;It&#39;s a tie!\&quot;) }...}All the cases when your choice is rockif (userChoice === \&quot;rock\&quot;) {\tif (computerChoice === \&quot;paper\&quot;) { console.log(\&quot;You lost!\&quot;) } else if (computerChoice === \&quot;scissors\&quot;) { console.log(\&quot;You won!\&quot;) }Repeat for other n choices; this case, twoif (userChoice === \&quot;paper\&quot;) { if (computerChoice === \&quot;rock\&quot;) { console.log(\&quot;You won!\&quot;) } else if (computerChoice === \&quot;scissors\&quot;) { console.log(\&quot;You lost!\&quot;) }}if (userChoice === \&quot;scissors\&quot;) { if (computerChoice === \&quot;rock\&quot;) { console.log(\&quot;You lost!\&quot;) } else if (computerChoice === \&quot;paper\&quot;) { console.log(\&quot;You won!\&quot;) }}Optimise by writing all the cases in one blockif (userChoice === computerChoice) { console.log(\&quot;It&#39;s a tie!\&quot;) } else if (userChoice === \&quot;rock\&quot;) { if (computerChoice === \&quot;paper\&quot;) { console.log(\&quot;You lost!\&quot;) } else if (computerChoice === \&quot;scissors\&quot;) { console.log(\&quot;You won!\&quot;) } } else if (userChoice === \&quot;paper\&quot;) { if (computerChoice === \&quot;rock\&quot;) { console.log(\&quot;You won!\&quot;) } else if (computerChoice === \&quot;scissors\&quot;) { console.log(\&quot;You lost!\&quot;) } } else if (userChoice === \&quot;scissors\&quot;) { if (computerChoice === \&quot;rock\&quot;) { console.log(\&quot;You lost!\&quot;) } else if (computerChoice === \&quot;paper\&quot;) { console.log(\&quot;You won!\&quot;) } }Full Code&quot;, &quot;content_html&quot;: &quot;&lt;h4 id=\&quot;scroll-down-for-full-code\&quot;&gt;&lt;a href=\&quot;#full-code\&quot;&gt;Scroll down for full code.&lt;/a&gt;&lt;/h4&gt;&lt;h4 id=\&quot;output\&quot;&gt;Output&lt;/h4&gt;&lt;pre&gt;&lt;code&gt;// Pass a choice as argument to the main function.You chose paper and computer chose rock.You win!&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=\&quot;create-an-array-of-all-possible-choices\&quot;&gt;Create an array of all possible choices&lt;/h4&gt;&lt;p&gt;&lt;code&gt;const choices = [\&quot;rock\&quot;, \&quot;paper\&quot;, \&quot;scissors\&quot;]&lt;/code&gt;&lt;/p&gt;&lt;h4 id=\&quot;random-choice\&quot;&gt;Random Choice&lt;/h4&gt;&lt;p&gt;This would give us a random number between 1 and the array length which in this case happens to be 3.&lt;/p&gt;&lt;p&gt;&lt;code&gt;Math.floor(Math.random() * choices.length)&lt;/code&gt;&lt;/p&gt;&lt;h4 id=\&quot;main-function\&quot;&gt;Main function&lt;/h4&gt;&lt;p&gt;The &lt;code&gt;Random Choice&lt;/code&gt; code is put inside a function because ideally, everytime this function is called, a new choice would be generated.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;function game(userChoice) { const computerChoice = choices[Math.floor(Math.random() * choices.length)] console.log(`You chose ${userChoice} and computer chose ${computerChoice}.`)...}&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=\&quot;matchmaking\&quot;&gt;Matchmaking&lt;/h4&gt;&lt;p&gt;First things first, lets consider all the tie cases.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;function game(userChoice) { const computerChoice = choices[Math.floor(Math.random() * choices.length)] console.log(`You chose ${userChoice} and computer chose ${computerChoice}.`) \tif (userChoice === computerChoice) { console.log(\&quot;It&#39;s a tie!\&quot;) }...}&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=\&quot;all-the-cases-when-your-choice-is-rock\&quot;&gt;All the cases when your choice is rock&lt;/h4&gt;&lt;pre&gt;&lt;code&gt;if (userChoice === \&quot;rock\&quot;) {\tif (computerChoice === \&quot;paper\&quot;) { console.log(\&quot;You lost!\&quot;) } else if (computerChoice === \&quot;scissors\&quot;) { console.log(\&quot;You won!\&quot;) }&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=\&quot;repeat-for-other-n-choices-this-case-two\&quot;&gt;Repeat for other n choices; this case, two&lt;/h4&gt;&lt;pre&gt;&lt;code&gt;if (userChoice === \&quot;paper\&quot;) { if (computerChoice === \&quot;rock\&quot;) { console.log(\&quot;You won!\&quot;) } else if (computerChoice === \&quot;scissors\&quot;) { console.log(\&quot;You lost!\&quot;) }}if (userChoice === \&quot;scissors\&quot;) { if (computerChoice === \&quot;rock\&quot;) { console.log(\&quot;You lost!\&quot;) } else if (computerChoice === \&quot;paper\&quot;) { console.log(\&quot;You won!\&quot;) }}&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=\&quot;optimise-by-writing-all-the-cases-in-one-block\&quot;&gt;Optimise by writing all the cases in one block&lt;/h4&gt;&lt;pre&gt;&lt;code&gt;if (userChoice === computerChoice) { console.log(\&quot;It&#39;s a tie!\&quot;) } else if (userChoice === \&quot;rock\&quot;) { if (computerChoice === \&quot;paper\&quot;) { console.log(\&quot;You lost!\&quot;) } else if (computerChoice === \&quot;scissors\&quot;) { console.log(\&quot;You won!\&quot;) } } else if (userChoice === \&quot;paper\&quot;) { if (computerChoice === \&quot;rock\&quot;) { console.log(\&quot;You won!\&quot;) } else if (computerChoice === \&quot;scissors\&quot;) { console.log(\&quot;You lost!\&quot;) } } else if (userChoice === \&quot;scissors\&quot;) { if (computerChoice === \&quot;rock\&quot;) { console.log(\&quot;You lost!\&quot;) } else if (computerChoice === \&quot;paper\&quot;) { console.log(\&quot;You won!\&quot;) } }&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=\&quot;full-code\&quot;&gt;&lt;a name=\&quot;full-code\&quot;&gt;Full Code&lt;/a&gt;&lt;/h4&gt;&lt;script src=\&quot;https://gist.github.com/rohanharikr/8bfbd1471389e795b436cd87ab09a444.js\&quot;&gt;&lt;/script&gt;&quot;, &quot;url&quot;: &quot;http://localhost:4000/2020/06/02/rock-paper-scissors-javascript&quot;, &quot;date_published&quot;: &quot;2020-06-02T00:00:00+05:30&quot;, &quot;date_modified&quot;: &quot;2020-06-02T00:00:00+05:30&quot;, &quot;author&quot;: { &quot;name&quot;: &quot;rohan&quot;, &quot;url&quot;: null, &quot;avatar&quot;: null } } ] }" /><link rel="canonical" href="http://localhost:4000/feed.json" /><meta property="og:url" content="http://localhost:4000/feed.json" /><meta property="og:site_name" content="Rohan" /><meta name="twitter:card" content="summary" /><meta property="twitter:title" content="Rohan" /><meta name="twitter:site" content="@rohanharikr" /><meta name="twitter:creator" content="@rohanharikr" /> <script type="application/ld+json"> {"url":"http://localhost:4000/feed.json","headline":"Rohan","author":{"@type":"Person","name":"rohan"},"description":"{ “version”: “https://jsonfeed.org/version/1”, “title”: “Rohan”, “home_page_url”: “http://localhost:4000/”, “feed_url”: “http://localhost:4000/feed.json”, “description”: “Rohan was here.”, “icon”: “http://localhost:4000/apple-touch-icon.png”, “favicon”: “http://localhost:4000/favicon.ico”, “expired”: false, &quot;author&quot;: { &quot;name&quot;: &quot;rohan&quot;, &quot;url&quot;: null, &quot;avatar&quot;: null }, “items”: [ { &quot;id&quot;: &quot;http://localhost:4000/2020/06/02/rock-paper-scissors-javascript&quot;, &quot;title&quot;: &quot;Rock, paper, scissors, javascript&quot;, &quot;summary&quot;: null, &quot;content_text&quot;: &quot;Scroll down for full code.Output// Pass a choice as argument to the main function.You chose paper and computer chose rock.You win!Create an array of all possible choicesconst choices = [\\&quot;rock\\&quot;, \\&quot;paper\\&quot;, \\&quot;scissors\\&quot;]Random ChoiceThis would give us a random number between 1 and the array length which in this case happens to be 3.Math.floor(Math.random() * choices.length)Main functionThe Random Choice code is put inside a function because ideally, everytime this function is called, a new choice would be generated.function game(userChoice) { const computerChoice = choices[Math.floor(Math.random() * choices.length)] console.log(`You chose ${userChoice} and computer chose ${computerChoice}.`)...}MatchmakingFirst things first, lets consider all the tie cases.function game(userChoice) { const computerChoice = choices[Math.floor(Math.random() * choices.length)] console.log(`You chose ${userChoice} and computer chose ${computerChoice}.`) \\tif (userChoice === computerChoice) { console.log(\\&quot;It&#39;s a tie!\\&quot;) }...}All the cases when your choice is rockif (userChoice === \\&quot;rock\\&quot;) {\\tif (computerChoice === \\&quot;paper\\&quot;) { console.log(\\&quot;You lost!\\&quot;) } else if (computerChoice === \\&quot;scissors\\&quot;) { console.log(\\&quot;You won!\\&quot;) }Repeat for other n choices; this case, twoif (userChoice === \\&quot;paper\\&quot;) { if (computerChoice === \\&quot;rock\\&quot;) { console.log(\\&quot;You won!\\&quot;) } else if (computerChoice === \\&quot;scissors\\&quot;) { console.log(\\&quot;You lost!\\&quot;) }}if (userChoice === \\&quot;scissors\\&quot;) { if (computerChoice === \\&quot;rock\\&quot;) { console.log(\\&quot;You lost!\\&quot;) } else if (computerChoice === \\&quot;paper\\&quot;) { console.log(\\&quot;You won!\\&quot;) }}Optimise by writing all the cases in one blockif (userChoice === computerChoice) { console.log(\\&quot;It&#39;s a tie!\\&quot;) } else if (userChoice === \\&quot;rock\\&quot;) { if (computerChoice === \\&quot;paper\\&quot;) { console.log(\\&quot;You lost!\\&quot;) } else if (computerChoice === \\&quot;scissors\\&quot;) { console.log(\\&quot;You won!\\&quot;) } } else if (userChoice === \\&quot;paper\\&quot;) { if (computerChoice === \\&quot;rock\\&quot;) { console.log(\\&quot;You won!\\&quot;) } else if (computerChoice === \\&quot;scissors\\&quot;) { console.log(\\&quot;You lost!\\&quot;) } } else if (userChoice === \\&quot;scissors\\&quot;) { if (computerChoice === \\&quot;rock\\&quot;) { console.log(\\&quot;You lost!\\&quot;) } else if (computerChoice === \\&quot;paper\\&quot;) { console.log(\\&quot;You won!\\&quot;) } }Full Code&quot;, &quot;content_html&quot;: &quot;&lt;h4 id=\\&quot;scroll-down-for-full-code\\&quot;&gt;&lt;a href=\\&quot;#full-code\\&quot;&gt;Scroll down for full code.&lt;/a&gt;&lt;/h4&gt;&lt;h4 id=\\&quot;output\\&quot;&gt;Output&lt;/h4&gt;&lt;pre&gt;&lt;code&gt;// Pass a choice as argument to the main function.You chose paper and computer chose rock.You win!&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=\\&quot;create-an-array-of-all-possible-choices\\&quot;&gt;Create an array of all possible choices&lt;/h4&gt;&lt;p&gt;&lt;code&gt;const choices = [\\&quot;rock\\&quot;, \\&quot;paper\\&quot;, \\&quot;scissors\\&quot;]&lt;/code&gt;&lt;/p&gt;&lt;h4 id=\\&quot;random-choice\\&quot;&gt;Random Choice&lt;/h4&gt;&lt;p&gt;This would give us a random number between 1 and the array length which in this case happens to be 3.&lt;/p&gt;&lt;p&gt;&lt;code&gt;Math.floor(Math.random() * choices.length)&lt;/code&gt;&lt;/p&gt;&lt;h4 id=\\&quot;main-function\\&quot;&gt;Main function&lt;/h4&gt;&lt;p&gt;The &lt;code&gt;Random Choice&lt;/code&gt; code is put inside a function because ideally, everytime this function is called, a new choice would be generated.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;function game(userChoice) { const computerChoice = choices[Math.floor(Math.random() * choices.length)] console.log(`You chose ${userChoice} and computer chose ${computerChoice}.`)...}&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=\\&quot;matchmaking\\&quot;&gt;Matchmaking&lt;/h4&gt;&lt;p&gt;First things first, lets consider all the tie cases.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;function game(userChoice) { const computerChoice = choices[Math.floor(Math.random() * choices.length)] console.log(`You chose ${userChoice} and computer chose ${computerChoice}.`) \\tif (userChoice === computerChoice) { console.log(\\&quot;It&#39;s a tie!\\&quot;) }...}&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=\\&quot;all-the-cases-when-your-choice-is-rock\\&quot;&gt;All the cases when your choice is rock&lt;/h4&gt;&lt;pre&gt;&lt;code&gt;if (userChoice === \\&quot;rock\\&quot;) {\\tif (computerChoice === \\&quot;paper\\&quot;) { console.log(\\&quot;You lost!\\&quot;) } else if (computerChoice === \\&quot;scissors\\&quot;) { console.log(\\&quot;You won!\\&quot;) }&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=\\&quot;repeat-for-other-n-choices-this-case-two\\&quot;&gt;Repeat for other n choices; this case, two&lt;/h4&gt;&lt;pre&gt;&lt;code&gt;if (userChoice === \\&quot;paper\\&quot;) { if (computerChoice === \\&quot;rock\\&quot;) { console.log(\\&quot;You won!\\&quot;) } else if (computerChoice === \\&quot;scissors\\&quot;) { console.log(\\&quot;You lost!\\&quot;) }}if (userChoice === \\&quot;scissors\\&quot;) { if (computerChoice === \\&quot;rock\\&quot;) { console.log(\\&quot;You lost!\\&quot;) } else if (computerChoice === \\&quot;paper\\&quot;) { console.log(\\&quot;You won!\\&quot;) }}&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=\\&quot;optimise-by-writing-all-the-cases-in-one-block\\&quot;&gt;Optimise by writing all the cases in one block&lt;/h4&gt;&lt;pre&gt;&lt;code&gt;if (userChoice === computerChoice) { console.log(\\&quot;It&#39;s a tie!\\&quot;) } else if (userChoice === \\&quot;rock\\&quot;) { if (computerChoice === \\&quot;paper\\&quot;) { console.log(\\&quot;You lost!\\&quot;) } else if (computerChoice === \\&quot;scissors\\&quot;) { console.log(\\&quot;You won!\\&quot;) } } else if (userChoice === \\&quot;paper\\&quot;) { if (computerChoice === \\&quot;rock\\&quot;) { console.log(\\&quot;You won!\\&quot;) } else if (computerChoice === \\&quot;scissors\\&quot;) { console.log(\\&quot;You lost!\\&quot;) } } else if (userChoice === \\&quot;scissors\\&quot;) { if (computerChoice === \\&quot;rock\\&quot;) { console.log(\\&quot;You lost!\\&quot;) } else if (computerChoice === \\&quot;paper\\&quot;) { console.log(\\&quot;You won!\\&quot;) } }&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=\\&quot;full-code\\&quot;&gt;&lt;a name=\\&quot;full-code\\&quot;&gt;Full Code&lt;/a&gt;&lt;/h4&gt;&lt;script src=\\&quot;https://gist.github.com/rohanharikr/8bfbd1471389e795b436cd87ab09a444.js\\&quot;&gt;&lt;/script&gt;&quot;, &quot;url&quot;: &quot;http://localhost:4000/2020/06/02/rock-paper-scissors-javascript&quot;, &quot;date_published&quot;: &quot;2020-06-02T00:00:00+05:30&quot;, &quot;date_modified&quot;: &quot;2020-06-02T00:00:00+05:30&quot;, &quot;author&quot;: { &quot;name&quot;: &quot;rohan&quot;, &quot;url&quot;: null, &quot;avatar&quot;: null } } ] }","@type":"WebPage","@context":"https://schema.org"}</script><title> Rohan - Rohan was here.</title><link rel="shortcut icon" href="/favicon.png"><link rel="alternate" type="application/atom+xml" title="Rohan" href="/atom.xml"><link rel="alternate" type="application/json" title="Rohan" href="http://localhost:4000/feed.json" /><link rel="sitemap" type="application/xml" title="sitemap" href="/sitemap.xml" /><style> *,:after,:before{box-sizing:border-box;background-color:inherit;color:inherit;margin:0;padding:0}body{font-family:system-ui, sans-serif;-webkit-font-smoothing:antialiased;text-rendering:optimizeLegibility;line-height:1.5;font-size:1rem;color:#16171a}nav ul{border-right:1px solid #edf2f7}a{color:#000;text-decoration-skip-ink:auto;text-decoration:underline}pre{margin:.5rem 0;padding:.5rem}.post p{margin:.5rem 0}.post h1,.post h2,.post h3,.post h4{margin:1rem 0}.post h2:first-child,.project h2:first-child,.photo h2:first-child{margin-top:0}.meta{margin:2rem 0}code,pre{background:#ecedee}code{padding:.1rem}pre code{border:none}pre{padding:1rem;overflow-x:auto}img{max-width:100%}hr{background:#000;height:1px;border:0}header{flex-basis:10rem;flex-grow:1;position:relative}header a{text-decoration:none}header li{margin-bottom:.2rem;text-align:right;margin-right:2rem}header a.active{font-weight:bold}header,section{padding:1rem}blockquote{font-style:italic;border-left:5px solid #ececec;padding-left:1rem}h1,h2,h3,h4,h5{line-height:1;margin:1rem 0;font-weight:600}section h1:first-child{margin-top:0}strong,b{font-weight:bold}.photos ul{list-style:none}.photos li{margin-bottom:1.5rem}.photo picture,.project picture{margin-bottom:0.5rem}.posts ul,header ul{list-style:none}.posts li{align-items:center;display:flex;justify-content:space-between;margin-bottom:.5rem}.posts li a,.posts li div,.projects li a{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;text-decoration:none}.posts li time,.projects li time{padding-left:1rem;white-space:nowrap;font-variant-numeric:tabular-nums}main{display:flex;flex-wrap:wrap;max-width:60rem;margin:2rem auto;padding:1rem}@media screen and (max-width: 45rem){header li{display:inline;margin-right:1rem}.logo{padding-bottom:1rem}header ul{border-bottom:1px solid #edf2f7;padding-bottom:2rem}nav ul{border-right:0px}.photos ul{margin-top:0.5rem}}section{flex-basis:0;flex-grow:999;min-width:70%;display:flex;flex-direction:column}figcaption{font-size:smaller}</style></head><body><main role="main"><header role="banner"> <!--<h1 class="logo">Rohan</h1>--><nav role="navigation"><ul><li><a href="/" >About</a></li><li><a href="/projects" >Work</a></li><li><a href="/writing" >Writing</a></li><li><a href="/search" >Search</a></li><li><a href="/atom.xml" >Rss</a></li></ul></nav></header><section class="post"><h2></h2>{ "version": "https://jsonfeed.org/version/1", "title": "Rohan", "home_page_url": "http://localhost:4000/", "feed_url": "http://localhost:4000/feed.json", "description": "Rohan was here.", "icon": "http://localhost:4000/apple-touch-icon.png", "favicon": "http://localhost:4000/favicon.ico", "expired": false, "author": { "name": "rohan", "url": null, "avatar": null }, "items": [ { "id": "http://localhost:4000/2020/06/02/rock-paper-scissors-javascript", "title": "Rock, paper, scissors, javascript", "summary": null, "content_text": "Scroll down for full code.Output// Pass a choice as argument to the main function.You chose paper and computer chose rock.You win!Create an array of all possible choicesconst choices = [\"rock\", \"paper\", \"scissors\"]Random ChoiceThis would give us a random number between 1 and the array length which in this case happens to be 3.Math.floor(Math.random() * choices.length)Main functionThe Random Choice code is put inside a function because ideally, everytime this function is called, a new choice would be generated.function game(userChoice) { const computerChoice = choices[Math.floor(Math.random() * choices.length)] console.log(`You chose ${userChoice} and computer chose ${computerChoice}.`)...}MatchmakingFirst things first, lets consider all the tie cases.function game(userChoice) { const computerChoice = choices[Math.floor(Math.random() * choices.length)] console.log(`You chose ${userChoice} and computer chose ${computerChoice}.`) \tif (userChoice === computerChoice) { console.log(\"It's a tie!\") }...}All the cases when your choice is rockif (userChoice === \"rock\") {\tif (computerChoice === \"paper\") { console.log(\"You lost!\") } else if (computerChoice === \"scissors\") { console.log(\"You won!\") }Repeat for other n choices; this case, twoif (userChoice === \"paper\") { if (computerChoice === \"rock\") { console.log(\"You won!\") } else if (computerChoice === \"scissors\") { console.log(\"You lost!\") }}if (userChoice === \"scissors\") { if (computerChoice === \"rock\") { console.log(\"You lost!\") } else if (computerChoice === \"paper\") { console.log(\"You won!\") }}Optimise by writing all the cases in one blockif (userChoice === computerChoice) { console.log(\"It's a tie!\") } else if (userChoice === \"rock\") { if (computerChoice === \"paper\") { console.log(\"You lost!\") } else if (computerChoice === \"scissors\") { console.log(\"You won!\") } } else if (userChoice === \"paper\") { if (computerChoice === \"rock\") { console.log(\"You won!\") } else if (computerChoice === \"scissors\") { console.log(\"You lost!\") } } else if (userChoice === \"scissors\") { if (computerChoice === \"rock\") { console.log(\"You lost!\") } else if (computerChoice === \"paper\") { console.log(\"You won!\") } }Full Code", "content_html": "<h4 id=\"scroll-down-for-full-code\"><a href=\"#full-code\">Scroll down for full code.</a></h4><h4 id=\"output\">Output</h4><pre><code>// Pass a choice as argument to the main function.You chose paper and computer chose rock.You win!</code></pre><h4 id=\"create-an-array-of-all-possible-choices\">Create an array of all possible choices</h4><p><code>const choices = [\"rock\", \"paper\", \"scissors\"]</code></p><h4 id=\"random-choice\">Random Choice</h4><p>This would give us a random number between 1 and the array length which in this case happens to be 3.</p><p><code>Math.floor(Math.random() * choices.length)</code></p><h4 id=\"main-function\">Main function</h4><p>The <code>Random Choice</code> code is put inside a function because ideally, everytime this function is called, a new choice would be generated.</p><pre><code>function game(userChoice) {    const computerChoice = choices[Math.floor(Math.random() * choices.length)]    console.log(`You chose ${userChoice} and computer chose ${computerChoice}.`)...}</code></pre><h4 id=\"matchmaking\">Matchmaking</h4><p>First things first, lets consider all the tie cases.</p><pre><code>function game(userChoice) {    const computerChoice = choices[Math.floor(Math.random() * choices.length)]    console.log(`You chose ${userChoice} and computer chose ${computerChoice}.`)   \tif (userChoice === computerChoice) {        console.log(\"It's a tie!\")    }...}</code></pre><h4 id=\"all-the-cases-when-your-choice-is-rock\">All the cases when your choice is rock</h4><pre><code>if (userChoice === \"rock\") {\tif (computerChoice === \"paper\") {            console.log(\"You lost!\")    } else if (computerChoice === \"scissors\") {            console.log(\"You won!\")    }</code></pre><h4 id=\"repeat-for-other-n-choices-this-case-two\">Repeat for other n choices; this case, two</h4><pre><code>if (userChoice === \"paper\") {    if (computerChoice === \"rock\") {        console.log(\"You won!\")    } else if (computerChoice === \"scissors\") {        console.log(\"You lost!\")    }}if (userChoice === \"scissors\") {    if (computerChoice === \"rock\") {        console.log(\"You lost!\")    } else if (computerChoice === \"paper\") {        console.log(\"You won!\")    }}</code></pre><h4 id=\"optimise-by-writing-all-the-cases-in-one-block\">Optimise by writing all the cases in one block</h4><pre><code>if (userChoice === computerChoice) {        console.log(\"It's a tie!\")    } else if (userChoice === \"rock\") {        if (computerChoice === \"paper\") {            console.log(\"You lost!\")        } else if (computerChoice === \"scissors\") {            console.log(\"You won!\")        }    } else if (userChoice === \"paper\") {        if (computerChoice === \"rock\") {            console.log(\"You won!\")        } else if (computerChoice === \"scissors\") {            console.log(\"You lost!\")        }    } else if (userChoice === \"scissors\") {        if (computerChoice === \"rock\") {            console.log(\"You lost!\")        } else if (computerChoice === \"paper\") {            console.log(\"You won!\")        }    }</code></pre><h4 id=\"full-code\"><a name=\"full-code\">Full Code</a></h4><script src=\"https://gist.github.com/rohanharikr/8bfbd1471389e795b436cd87ab09a444.js\"></script>", "url": "http://localhost:4000/2020/06/02/rock-paper-scissors-javascript", "date_published": "2020-06-02T00:00:00+05:30", "date_modified": "2020-06-02T00:00:00+05:30", "author": { "name": "rohan", "url": null, "avatar": null } } ] }</section></main></body></html>
